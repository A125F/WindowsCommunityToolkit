<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
                    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
                    xmlns:contract4Present="http://schemas.microsoft.com/winfx/2006/xaml/presentation?IsApiContractPresent(Windows.Foundation.UniversalApiContract,4)">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ms-appx:///Microsoft.Toolkit.Uwp.UI.Controls.Core/TabbedCommandBar/TabbedCommandBarItem.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style BasedOn="{StaticResource DefaultTabbedCommandBarStyle}"
           TargetType="controls:TabbedCommandBar" />

    <Style x:Key="DefaultTabbedCommandBarStyle"
           TargetType="controls:TabbedCommandBar">
        <Setter Property="MenuItemTemplateSelector" Value="{StaticResource DefaultTabbedCommandBarItemTemplateSelector}" />
        <Setter Property="PaneDisplayMode" Value="Top" />
        <Setter Property="PaneToggleButtonStyle" Value="{StaticResource PaneToggleButtonStyle}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="CompactPaneLength" Value="{ThemeResource NavigationViewCompactPaneLength}" />
        <Setter Property="Background" Value="{ThemeResource SystemChromeMediumLowColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:TabbedCommandBar">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Grid x:Name="RootGrid">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="DisplayModeGroup">
                                    <VisualState x:Name="TopNavigationMinimal">
                                        <VisualState.Setters>
                                            <Setter Target="ContentGrid.BorderThickness" Value="{ThemeResource TopNavigationViewContentGridBorderThickness}" />
                                            <Setter Target="ContentGrid.CornerRadius" Value="{ThemeResource TopNavigationViewContentGridCornerRadius}" />
                                            <Setter Target="ContentGrid.Margin" Value="{ThemeResource TopNavigationViewContentMargin}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>

                                <VisualStateGroup x:Name="HeaderGroup">
                                    <VisualState x:Name="HeaderVisible" />
                                    <VisualState x:Name="HeaderCollapsed">
                                        <VisualState.Setters>
                                            <Setter Target="HeaderContent.Visibility" Value="Collapsed" />
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>

                                <VisualStateGroup x:Name="TitleBarVisibilityGroup">
                                    <VisualState x:Name="TitleBarVisible" />
                                    <VisualState x:Name="TitleBarCollapsed">
                                        <VisualState.Setters>
                                            <Setter Target="PaneContentGrid.Margin" Value="0,32,0,0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <!-- Content layouts -->
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <!-- DisplayMode top -->
                                <StackPanel
                                    x:Name="TopNavArea"
                                    Background="{ThemeResource NavigationViewTopPaneBackground}"
                                    Grid.Row="0"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Top"
                                    Canvas.ZIndex="1"
                                    contract4Present:XYFocusKeyboardNavigation="Enabled">

                                    <Grid x:Name="TopNavTopPadding"
                                          Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPadding}"
                                          Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPaneVisibility}"/>

                                    <Grid x:Name="TopNavGrid" 
                                          Height="{ThemeResource NavigationViewTopPaneHeight}"
                                          Margin="{ThemeResource TopNavigationViewTopNavGridMargin}"
                                          Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.TopPaneVisibility}"
                                          BorderBrush="{ThemeResource NavigationViewItemSeparatorForeground}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition x:Name="BackButtonPlaceholderOnTopNav" Width="{ThemeResource NavigationBackButtonWidth}"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*" MinWidth="{ThemeResource TopNavigationViewPaneCustomContentMinWidth}"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <Grid 
                                            x:Name="TopNavLeftPadding" 
                                            Grid.Column="1"
                                            Width="0"/>

                                        <ContentControl
                                            x:Name="PaneHeaderOnTopPane"
                                            IsTabStop="False"
                                            VerticalContentAlignment="Stretch"
                                            HorizontalContentAlignment="Stretch"
                                            Grid.Column="2"/>

                                        <ContentControl
                                            x:Name="PaneTitleOnTopPane"
                                            IsTabStop="False"
                                            VerticalContentAlignment="Stretch"
                                            HorizontalContentAlignment="Stretch"
                                            Margin="{ThemeResource NavigationViewItemInnerHeaderMargin}"
                                            Grid.Column="2"/>

                                        <!-- Top nav ItemsRepeater -->
                                        <muxc:ItemsRepeaterScrollHost Grid.Column="3">
                                            <ScrollViewer
                                                HorizontalScrollMode="Disabled"
                                                HorizontalScrollBarVisibility="Hidden"
                                                VerticalScrollMode="Disabled"
                                                VerticalScrollBarVisibility="Hidden">
                                                <muxc:ItemsRepeater 
                                                    AutomationProperties.LandmarkType="Navigation"
                                                    AutomationProperties.Name="{TemplateBinding AutomationProperties.Name}"
                                                    AutomationProperties.AccessibilityView = "Content"
                                                    x:Name="TopNavMenuItemsHost">
                                                    <muxc:ItemsRepeater.Layout>
                                                        <muxc:StackLayout Orientation="Horizontal"/>
                                                    </muxc:ItemsRepeater.Layout>
                                                </muxc:ItemsRepeater>
                                            </ScrollViewer>
                                        </muxc:ItemsRepeaterScrollHost>

                                        <Button 
                                            x:Name="TopNavOverflowButton"
                                            Grid.Column="4"
                                            Content="More"
                                            Margin="{ThemeResource TopNavigationViewOverflowButtonMargin}"
                                            Style="{StaticResource NavigationViewOverflowButtonStyleWhenPaneOnTop}"
                                            Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TemplateSettings.OverflowButtonVisibility}">

                                            <Button.Flyout>
                                                <Flyout
                                                    Placement="BottomEdgeAlignedRight"
                                                    ElementSoundMode="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ElementSoundMode}">
                                                    <Flyout.FlyoutPresenterStyle>
                                                        <Style TargetType="FlyoutPresenter">
                                                            <Setter Property="Padding" Value="{ThemeResource TopNavigationViewOverflowMenuPadding}" />
                                                            <!-- Set negative top margin to make the flyout align exactly with the button -->
                                                            <Setter Property="Margin" Value="0,-4,0,0" />
                                                            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Auto" />
                                                            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                                                            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Auto" />
                                                            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                                                            <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
                                                            <Setter Property="CornerRadius" Value="{ThemeResource OverlayCornerRadius}" />
                                                            <Setter Property="Template">
                                                                <Setter.Value>
                                                                    <ControlTemplate TargetType="FlyoutPresenter">
                                                                        <ScrollViewer
                                                                            x:Name="ScrollViewer"
                                                                            ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                                                                            HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                                                                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                                                            VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                                                                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                                                            AutomationProperties.AccessibilityView="Raw">
                                                                            <ContentPresenter
                                                                                x:Name="ContentPresenter"
                                                                                Background="{TemplateBinding Background}"
                                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                                Content="{TemplateBinding Content}"
                                                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                                                                Padding="{TemplateBinding Padding}"
                                                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                                CornerRadius="{TemplateBinding CornerRadius}"/>
                                                                        </ScrollViewer>
                                                                    </ControlTemplate>
                                                                </Setter.Value>
                                                            </Setter>
                                                        </Style>
                                                    </Flyout.FlyoutPresenterStyle>
                                                    <muxc:ItemsRepeaterScrollHost>
                                                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                                                            <muxc:ItemsRepeater
                                                                    AutomationProperties.AccessibilityView = "Content"
                                                                    x:Name="TopNavMenuItemsOverflowHost">
                                                                <muxc:ItemsRepeater.Layout>
                                                                    <muxc:StackLayout />
                                                                </muxc:ItemsRepeater.Layout>
                                                            </muxc:ItemsRepeater>
                                                        </ScrollViewer>
                                                    </muxc:ItemsRepeaterScrollHost>
                                                </Flyout>
                                            </Button.Flyout>
                                        </Button>

                                        <ContentControl
                                            x:Name="PaneCustomContentOnTopPane"
                                            IsTabStop="False"
                                            VerticalContentAlignment="Stretch"
                                            HorizontalContentAlignment="Stretch"
                                            Grid.Column="5"/>

                                        <ContentControl
                                            x:Name="PaneFooterOnTopPane"
                                            IsTabStop="False"
                                            VerticalContentAlignment="Stretch"
                                            HorizontalContentAlignment="Stretch"
                                            Grid.Column="7" />
                                        <!-- Top footer menu ItemsRepeater -->
                                        <muxc:ItemsRepeater
                                            Grid.Column="8"
                                            AutomationProperties.LandmarkType="Navigation"
                                            AutomationProperties.AccessibilityView = "Content"
                                            x:Name="TopFooterMenuItemsHost">
                                            <muxc:ItemsRepeater.Layout>
                                                <muxc:StackLayout Orientation="Horizontal"/>
                                            </muxc:ItemsRepeater.Layout>
                                        </muxc:ItemsRepeater>

                                    </Grid>
                                    <Border
                                        x:Name="TopNavContentOverlayAreaGrid"
                                        Child="{TemplateBinding ContentOverlay}" />
                                </StackPanel>

                            </Grid>
                        </Grid>

                        <Border x:Name="PART_TabbedCommandBarContentBorder"
                                Grid.Row="1"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                Background="{Binding ElementName=PART_TabbedCommandBarContent, Path=Content.Background}">
                            <ContentControl x:Name="PART_TabbedCommandBarContent"
                                            HorizontalContentAlignment="Stretch"
                                            Content="{TemplateBinding SelectedItem}">
                                <ContentControl.Resources>
                                    <Storyboard x:Name="TabChangedStoryboard">
                                        <PopInThemeAnimation TargetName="PART_TabbedCommandBarContent" />
                                    </Storyboard>

                                    <!--
                                        FIXME: Ideally, these resources would be set by the TabbedCommandBarItem,
                                        but there isn't a way to do that without duplicating the CommandBar template.
                                    -->
                                    <Style BasedOn="{StaticResource TabbedCommandBarElementContainerStyle}"
                                           TargetType="AppBarElementContainer" />
                                    <Style BasedOn="{StaticResource AppBarSplitButtonStyle}"
                                           TargetType="SplitButton" />
                                </ContentControl.Resources>
                            </ContentControl>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="TabbedCommandBarAcrylicBackground"
                     Color="{ThemeResource SystemControlChromeMediumLowAcrylicWindowMediumBrush}" />
    <Style x:Key="TabbedCommandBarAcrylicStyle"
           BasedOn="{StaticResource DefaultTabbedCommandBarStyle}"
           TargetType="controls:TabbedCommandBar">
        <Setter Property="Background" Value="{ThemeResource TabbedCommandBarAcrylicBackground}" />
    </Style>

</ResourceDictionary>